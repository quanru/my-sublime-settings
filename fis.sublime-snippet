<snippet>
  <content><![CDATA[
    //fis-conf.js
    // 设置图片合并的最小间隔
    fis.config.set('settings.spriter.csssprites.margin', 20);
    // 取消下面的注释开启simple插件，注意需要先进行插件安装 npm install -g fis-postpackager-simple
    // fis.config.set('modules.postpackager', 'simple');
    // 取消下面的注释设置打包规则
    fis.config.set('pack', {
        '/pkg/lib.js': ['js/lib/jquery.js', 'js/lib/underscore.js', 'js/lib/backbone.js', 'js/lib/backbone.localStorage.js', ],
        // 取消下面的注释设置CSS打包规则，CSS打包的同时会进行图片合并
        '/pkg/aio.css': '**.css'
    });
    fis.config.set('modules.postpackager', 'simple');
    // 取消下面的注释可以开启simple对零散资源的自动合并
    fis.config.set('settings.postpackager.simple.autoCombine', true);
    fis.config.merge({
        modules: {
            parser: {
                //coffee后缀的文件使用fis-parser-coffee-script插件编译
                coffee: 'coffee-script',
                //less后缀的文件使用fis-parser-less插件编译
                //处理器支持数组，或者逗号分隔的字符串配置
                less: ['less'],
                //md后缀的文件使用fis-parser-marked插件编译
                md: 'marked'
            }
        },
        roadmap: {
            ext: {
                //less后缀的文件将输出为css后缀
                //并且在parser之后的其他处理流程中被当做css文件处理
                less: 'css',
                //coffee后缀的文件将输出为js文件
                //并且在parser之后的其他处理流程中被当做js文件处理
                coffee: 'js',
                //md后缀的文件将输出为html文件
                //并且在parser之后的其他处理流程中被当做html文件处理
                md: 'html'
            }
        }
    });
    //fis-conf.js//用法一
    fis.config.merge({
        roadmap: {
            //所有静态资源文件都使用 http://s1.example.com 或者 http://s2.example.com 作为域名 
            domain: '//cdn.wacaiyun.com, //wacai-file.b0.upaiyun.com'
        }
    }); 
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>fis</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope>source.python</scope> -->
</snippet>
